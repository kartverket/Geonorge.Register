///////////////////////////////////////////////////////////
//  Document.cs
//  Implementation of the Class Document
//  Generated by Enterprise Architect
//  Created on:      24-nov-2014 22:43:38
//  Original author: Tor Kjetil
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using Resources;
using Kartverket.Register.Models.Translations;

namespace Kartverket.Register.Models
{
    public class Document : RegisterItem
    {
        public Document()
        {
            this.Translations = new TranslationCollection<DocumentTranslation>();
        }
        // logos will be stored in this directory
        public const string DataDirectory = "documents/";

        [Display(Name = "Thumbnail", ResourceType = typeof(Documents))]
        public string thumbnail { get; set; }
        [Display(Name = "DocumentOwner", ResourceType = typeof(Documents))]
        [ForeignKey("documentowner")]
        public Guid documentownerId { get; set; }
        public virtual Organization documentowner { get; set; }

        public virtual TranslationCollection<DocumentTranslation> Translations { get; set; }
        public void AddMissingTranslations()
        {
            Translations.AddMissingTranslations();
        }

        public new string NameTranslated()
        {
            return base.NameTranslated();
        }

        public new string DescriptionTranslated()
        {
            return base.DescriptionTranslated();
        }

        public virtual string GetDocumentUrl()
        {
            if (register.parentRegisterId == Guid.Empty || register.parentRegister == null)
            {
                if (documentowner == null && seoname == null)
                    return "/register/versjoner/" + register.seoname;
                else
                    return "/register/versjoner/" + register.seoname + "/" + documentowner.seoname + "/" + seoname;
            }
            else {
                return "/subregister/versjoner/" + register.parentRegister.seoname + "/" + register.owner.seoname + "/" + register.seoname + "/" + documentowner.seoname + "/" + seoname;
            }
        }

        public virtual string GetDocumentEditUrl()
        {
            if (register.parentRegister == null)
            {
                return "/dokument/" + register.seoname + "/" + documentowner.seoname + "/" + seoname + "/rediger";
            }
            else {
                return "/dokument/" + register.parentRegister.seoname + "/" + register.owner.seoname + "/" + register.seoname + "/" + documentowner.seoname + "/" + seoname + "/rediger";
            }
        }

        public virtual string GetDocumentDeleteUrl()
        {
            if (register.parentRegister == null)
            {
                return "/dokument/" + register.seoname + "/" + documentowner.seoname + "/" + seoname + "/slett";
            }
            else {
                return "/dokument/" + register.parentRegister.seoname + "/" + register.owner.seoname + "/" + register.seoname + "/" + documentowner.seoname + "/" + seoname + "/slett";
            }
        }

        internal bool isCurrentVersion()
        {
            if (versioning != null)
            {
                return systemId == versioning.currentVersion;
            }
            return false;
        }

        public string ItemsByDocumentOwnerUrl()
        {
            return register.GetObjectUrl() + "/" + documentowner.seoname;
        }
    }//end Document
}//end namespace Datamodell