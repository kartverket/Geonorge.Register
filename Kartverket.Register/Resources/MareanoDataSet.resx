<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accesible_Label" xml:space="preserve">
    <value>Accesible</value>
  </data>
  <data name="Common" xml:space="preserve">
    <value>Nedlastingskrav status</value>
  </data>
  <data name="Delivery_Status_Satisfactory" xml:space="preserve">
    <value>Tilfredsstillende</value>
  </data>
  <data name="F1_a_Criteria" xml:space="preserve">
    <value>Sjekker at metadata har uuid (gmd:fileIdentifier)</value>
  </data>
  <data name="F1_Label" xml:space="preserve">
    <value>F1: Metadata har uuid</value>
  </data>
  <data name="F2_a_Criteria" xml:space="preserve">
    <value>Minst tre tematiske nøkkelord skal være lagt inn</value>
  </data>
  <data name="F2_b_Criteria" xml:space="preserve">
    <value>Tittel er på maks 100 tegn</value>
  </data>
  <data name="F2_c_Criteria" xml:space="preserve">
    <value>Beskrivelse skal være på minst 200 tegn og maks 600 tegn</value>
  </data>
  <data name="F2_Label" xml:space="preserve">
    <value>F2: Det finnes rike søkemetadata</value>
  </data>
  <data name="F3_a_Criteria" xml:space="preserve">
    <value>Sjekker at metadata har utfylt dataset-id (MD_Identifier - Code og Namespace)</value>
  </data>
  <data name="F3_Label" xml:space="preserve">
    <value>F3: Metadata har datasett-id</value>
  </data>
  <data name="F4_a_Criteria" xml:space="preserve">
    <value>Metadata skal være søkbare gjennom åpne protokoller og apier</value>
  </data>
  <data name="F4_Label" xml:space="preserve">
    <value>F4: Søkbare</value>
  </data>
  <data name="Findable_Label" xml:space="preserve">
    <value>Findable</value>
  </data>
  <data name="Interoperable_Label" xml:space="preserve">
    <value>Interoperable</value>
  </data>
  <data name="ReUseable_Label" xml:space="preserve">
    <value>Re-useable</value>
  </data>
  <data name="A1_a_Criteria" xml:space="preserve">
    <value>Datasettet er tilgjengelig som WFS/WCS</value>
  </data>
  <data name="A1_Label" xml:space="preserve">
    <value>A1: Metadata og datasett er tilgjengelig gjennom standard web-protokoller</value>
  </data>
  <data name="A1_b_Criteria" xml:space="preserve">
    <value>Datasettet er tilgjengelig som WMS</value>
  </data>
  <data name="A1_c_Criteria" xml:space="preserve">
    <value>Datasettet er tilgjengelig gjennom Geonorge-api</value>
  </data>
  <data name="A1_d_Criteria" xml:space="preserve">
    <value>Datasettet er tilgjengelig som Atom Feed</value>
  </data>
  <data name="A1_e_Criteria" xml:space="preserve">
    <value>Protokollene som støttes for tilgang til datasett er åpne, tilgjengelige og lesbare med standard IT-verktøy (Metadata som har nedlastnings-URL støtter dette kravet)</value>
  </data>
  <data name="A1_f_Criteria" xml:space="preserve">
    <value>Protokoller støtter autentisering og autorisasjon</value>
  </data>
  <data name="A2_a_Criteria" xml:space="preserve">
    <value>Metadata er tilgjengelig selv om data ikke lenger er tilgjengelig (ikke relevant)</value>
  </data>
  <data name="A2_Label" xml:space="preserve">
    <value>A2: Metadata er tilgjengelig selv om data ikke lenger er tilgjengelig (ikke relevant)</value>
  </data>
  <data name="I1_a_Criteria" xml:space="preserve">
    <value>Metadata i Geonorge baseres på ISO19115 og distibueres som OGC:CSW og DCAT-AP-NO og metadata i Geonorge tilfredsstiller dette kravet</value>
  </data>
  <data name="I1_b_Criteria" xml:space="preserve">
    <value>Datasett er distribuert på internasjonalt kjente og dokumenterte åpne formater. Sjekk om datasett distribueres som GML</value>
  </data>
  <data name="I1_c_Criteria" xml:space="preserve">
    <value>Datasett på GML-format validerer i henhold til UML-modell</value>
  </data>
  <data name="I1_Label" xml:space="preserve">
    <value>I1: Metadata er basert på internasjonale, godt dokumenterte og tilgjengelige standarder</value>
  </data>
  <data name="I2_a_Criteria" xml:space="preserve">
    <value>Tematisk hovedkategori må være utfylt</value>
  </data>
  <data name="I2_b_Criteria" xml:space="preserve">
    <value>Nasjonal temakategori er utfylt</value>
  </data>
  <data name="I2_Label" xml:space="preserve">
    <value>I2: Begreper, terminologier, ontologier og kodeverk -  godt forvaltet og tilgjengelig</value>
  </data>
  <data name="I3_a_Criteria" xml:space="preserve">
    <value>Metadata skal refererer til begreper i objektkatalogens UML-modell (Minst ett nøkkelord hvor Thesaurus må være "SOSI produktspesifikasjon")</value>
  </data>
  <data name="I3_b_Criteria" xml:space="preserve">
    <value>Metadata skal referere til UML-modell i Objektkatalogen (MD_ApplicationSchemaInformation)</value>
  </data>
  <data name="I3_Label" xml:space="preserve">
    <value>I3: Relasjoner mellom variabler er beskrevet – forståelig og presis tversgående sammenheng</value>
  </data>
  <data name="R1_a_Criteria" xml:space="preserve">
    <value>Lisens er oppgitt</value>
  </data>
  <data name="R1_Label" xml:space="preserve">
    <value>R1</value>
  </data>
  <data name="R2_a_Criteria" xml:space="preserve">
    <value>Prosesshistorie er oppgitt  og har mer enn 200 tegn</value>
  </data>
  <data name="R2_b_Criteria" xml:space="preserve">
    <value>Status er fylt ut med verdi  (gmd:maintenanceAndUpdateFrequency)</value>
  </data>
  <data name="R2_c_Criteria" xml:space="preserve">
    <value>Lenke til produktspesifikasjon</value>
  </data>
  <data name="R2_d_Criteria" xml:space="preserve">
    <value>Målestokksområde er oppgitt</value>
  </data>
  <data name="R2_e_Criteria" xml:space="preserve">
    <value>Dekningskart er oppgitt (kommunevis eller rutenett)</value>
  </data>
  <data name="R2_f_Criteria" xml:space="preserve">
    <value>Formål er utfylt</value>
  </data>
  <data name="R2_Label" xml:space="preserve">
    <value>R2: Metadata om kvalitet, dekning, bearbeiding, avledning, beregninger</value>
  </data>
  <data name="R3_a_Criteria" xml:space="preserve">
    <value>Metadata følger ISO19115 og distribueres også i henhold til DCAT-profilen</value>
  </data>
  <data name="R3_b_Criteria" xml:space="preserve">
    <value>Datasett leveres på internasjonale åpne formater = GML</value>
  </data>
  <data name="R3_Label" xml:space="preserve">
    <value>R3: Metadata og datasett følger internasjonale standarder</value>
  </data>
  <data name="Delivery_Status_Useable" xml:space="preserve">
    <value>Bør forbedres</value>
  </data>
  <data name="Delivery_Status_Deficient" xml:space="preserve">
    <value>Dårlig</value>
  </data>
</root>