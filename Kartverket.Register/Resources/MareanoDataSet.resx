<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Common" xml:space="preserve">
    <value>Nedlastingskrav status</value>
  </data>
  <data name="Delivery_Status_Satisfactory" xml:space="preserve">
    <value>Tilfredsstillende</value>
  </data>
  <data name="Delivery_Status_Useable" xml:space="preserve">
    <value>Bør forbedres</value>
  </data>
  <data name="Delivery_Status_Deficient" xml:space="preserve">
    <value>Dårlig</value>
  </data>
  <data name="Smiley-Green-Description" xml:space="preserve">
    <value>grønn</value>
  </data>
  <data name="Smiley-Yellow-Description" xml:space="preserve">
    <value>gul</value>
  </data>
  <data name="Smiley-Red-Description" xml:space="preserve">
    <value>rød</value>
  </data>
  <data name="RequirementsMetadata" xml:space="preserve">
    <value>&lt;p&gt;For at metadatakvaliteten skal bli &lt;b&gt;god&lt;/b&gt;, må metadata validere i Geonorge sin metadataeditor. Det vil si at alle påkrevde felt skal være utfylt. Ellers blir metadata vurdert til &lt;b&gt;brukbar&lt;/b&gt; hvis de finnes. Ellers blir status &lt;b&gt;ikke levert&lt;/b&gt;.&lt;/p&gt;</value>
  </data>
  <data name="RequirementsAtom" xml:space="preserve">
    <value>&lt;p&gt;For å oppnå &lt;b&gt;god&lt;/b&gt; oppfyllelse av krav, må datasettet være tilgjengelig gjennom en atom feed-tjeneste som er registrert i Geonorge. Ellers blir status &lt;b&gt;ikke levert&lt;/&gt;.&lt;/p&gt;</value>
  </data>
  <data name="RequirementsDownload" xml:space="preserve">
    <value>&lt;p&gt;Hvis datasettet er levert som atom feed eller WFS-krav er godt oppfylt vil dette kvalifisere til god oppfyllelse av krav. Hvis datasettet kun er tilgjengelig som WFS med brukbar oppfyllelse av krav, kvalifiserer dette til karakteren &lt;b&gt;brukbar&lt;/b&gt;. Ellers blir status &lt;b&gt;ikke levert&lt;/b&gt;.&lt;/p&gt;</value>
  </data>
  <data name="RequirementsGml" xml:space="preserve">
    <value>&lt;p&gt;For å oppnå &lt;b&gt;god&lt;/b&gt; oppfyllelse av krav, må nedlastbare GML-filer validere mot UML-modell i produktspesifikasjonen. Det vil gå fram av metadata om GML-filer er konforme med produktspesifikasjonen. Hvis det finnes nedlastbare GML-filer, så vil det kvalifisere til &lt;b&gt;brukbar&lt;/b&gt; oppfyllelse av krav. Ellers blir status &lt;b&gt;ikke levert&lt;/b&gt;.&lt;/p&gt;</value>
  </data>
  <data name="RequirementsProductSpesifications" xml:space="preserve">
    <value>&lt;p&gt;For å oppnå &lt;b&gt;god&lt;/b&gt; oppfyllelse av krav, må det refereres til godkjent SOSI produktspesifikasjon i metadata. Annen referert produktspesifikasjon vil kunne gi &lt;b&gt;brukbar&lt;/b&gt; oppfyllelse av krav. Ellers blir status &lt;b&gt;ikke levert&lt;/b&gt;.&lt;/p&gt;</value>
  </data>
  <data name="RequirementsSosi" xml:space="preserve">
    <value>&lt;p&gt;For å oppnå &lt;b&gt;god&lt;/b&gt; oppfyllelse av krav, må nedlastbare SOSI-filer validere mot UML-modell i produktspesifikasjonen. Det vil gå fram av metadata om SOSI-filer er konforme med produktspesifikasjonen. Hvis det finnes nedlastbare SOSI-filer, så vil det kvalifisere til &lt;b&gt;brukbar&lt;/b&gt; oppfyllelse av krav. Ellers blir status &lt;b&gt;ikke levert&lt;/b&gt;.&lt;/p&gt;</value>
  </data>
  <data name="RequirementsWfs" xml:space="preserve">
    <value>&lt;p&gt;For å oppnå &lt;b&gt;god&lt;/b&gt; oppfyllelse av krav, må det i metadata finnes en WMS-tjeneste. Ellers blir status &lt;b&gt;ikke levert&lt;/b&gt;.&lt;/p&gt;</value>
  </data>
  <data name="RequirementsWms" xml:space="preserve">
    <value>&lt;p&gt;For å oppnå &lt;b&gt;god&lt;/b&gt; oppfyllelse av krav, må det i metadata finnes en WMS-tjeneste. Ellers blir status &lt;b&gt;ikke levert&lt;/b&gt;.&lt;/p&gt;</value>
  </data>
  <data name="RatingBad" xml:space="preserve">
    <value>Dårlig (under 50%): Datasettet har store mangler i forhold til å oppfylle FAIR-prinsippene og må forbedres på mange områder.</value>
  </data>
  <data name="RatingDescription" xml:space="preserve">
    <value>Vi har laget ulike tester for å vurdere datasett i forholdtaeiere slik at de kan vurdere metadata mot ulike indikatorer. For mer informasjon om hvilke beregninger vi benytter for hver indikator, se på detaljene for metadatakvalitet for en spesifikk datasettbeskrivelse.</value>
  </data>
  <data name="RatingEmoprovements" xml:space="preserve">
    <value>Må forbedres (50-75%): Datasettet oppfyller et fåtall av FAIR-prinsippene på en god måte ,og må forbedres på flere områder.</value>
  </data>
  <data name="RatingGood" xml:space="preserve">
    <value>God (over 90%): Datasettet ivaretar FAIR-prinsippene på en god måte. Du må selv gjøre kvalitative undersøkelser for å vurdere eventuelle tiltak for at forhold rundt gjenbruk skal bli ytterliggere forbedret.</value>
  </data>
  <data name="RatingLabel" xml:space="preserve">
    <value>Forklaring til vurdering av FAIR-prinsipper:</value>
  </data>
  <data name="RatingSatisfactory" xml:space="preserve">
    <value>Tilfredsstillende (75-90%): Datasettet oppfyller mange av FAIR-prinsippene, men bør forbedres på flere områder for å sikre gjenbruk.</value>
  </data>
  <data name="lesmer" xml:space="preserve">
    <value>Les mer</value>
  </data>
  <data name="lesmindre" xml:space="preserve">
    <value>Lukk</value>
  </data>
  <data name="sedetaljer" xml:space="preserve">
    <value>Se detaljer</value>
  </data>
  <data name="DownloadRequirements" xml:space="preserve">
    <value>Nedlastingskrav</value>
  </data>
  <data name="Productspesification" xml:space="preserve">
    <value>Produktspesifikasjon</value>
  </data>
</root>