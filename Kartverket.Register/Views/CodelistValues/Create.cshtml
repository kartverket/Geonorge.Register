@using Kartverket.Register.Helpers
@model Kartverket.Register.Models.CodelistValue
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = CodelistValues.CreateNew;
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                @CodelistValues.CreateNew
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

@section breadcrumb {
    <li>@CodelistValues.CreateNew</li>
}

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12">
    <a href="@Model.GetImportUrl()" class="btn btn-default pull-right">@CodelistValues.Import</a>
</div>


<form action="@Request.Url.LocalPath" method="post">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ErrorMessage")
            </div>
        </div>

        @for (int t = 0; t < Model.Translations.Count; t++)
        {
            @Html.HiddenFor(m => Model.Translations[t].CultureName)
            <div class="form-group">
                @Html.LabelFor(m => Model.Translations[t].Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.Translations[t].Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => Model.Translations[t].Name)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int t = 0; t < Model.Translations.Count; t++)
        {
            @Html.HiddenFor(m => Model.Translations[t].CultureName)
            <div class="form-group">
                @Html.LabelFor(m => Model.Translations[t].Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.Translations[t].Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => Model.Translations[t].Description)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.value, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ValidFromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ValidFromDate, new { type = "date", cssClass = "date" })
                @Html.ValidationMessageFor(model => model.ValidFromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValidToDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ValidToDate, new { cssClass = "date", type = "date" })
                @Html.ValidationMessageFor(model => model.ValidToDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (HtmlHelperExtensions.IsAdmin())
            {
            <hr />
                <h4>@CodelistValues.HierarchicalCodelists</h4>
                <small>@CodelistValues.HierarchicalCodelistsSelectionText</small>
                <br /><br />
                <div class="form-group">
                    @Html.LabelFor(model => model.broaderItem, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="dropdown">
                            <select name="broader" class="form-control searchbar dropdown" data-toggle="dropdown">
                                <option selected="selected"></option>
                                @foreach (var register in HtmlHelperExtensions.CodelistRegister())
                                {
                                    <optgroup label="@register.name">
                                        @foreach (Kartverket.Register.Models.CodelistValue code in register.items.OrderBy(c => c.name))
                                        {
                                            <option value="@code.systemId">@code.name</option>
                                        }
                                    </optgroup>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.narrowerItems, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select name="narrower" data-placeholder="@CodelistValues.SelectCodeValue" multiple class="chosen-select form-control" tabindex="18" id="multiple-label-example">
                            @foreach (var register in HtmlHelperExtensions.CodelistRegister())
                            {
                                <optgroup label="@register.name">
                                    @foreach (Kartverket.Register.Models.CodelistValue code in register.items.OrderBy(c => c.name))
                                    {
                                        <option value="@code.systemId">@code.name</option>
                                    }
                                </optgroup>
                            }
                        </select>
                    </div>
                </div>
        }
    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="@Registers.Propose" class="btn btn-default pull-right" />
        <a href="@Model.register.GetObjectUrl()">@Shared.Back</a>
    </div>
</form>

@section scripts {
    <script src="~/Scripts/chosen.jquery.js"></script>
}
