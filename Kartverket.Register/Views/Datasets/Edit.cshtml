@using Kartverket.Register.Helpers
@model Kartverket.Register.Models.Dataset
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = Shared.Edit + " " + Model.name;
}
@section Scripts {
    <script>
        window.onload = function () {
            dokStatus();
        }
        function dokStatus() {
            var dokStatus = document.getElementById('dokStatusId');
            var selected = dokStatus.options[dokStatus.selectedIndex].text;

            if (selected == "Godkjent") {
                document.getElementById('approvalDate').hidden = false;
                enable();
            }
            else {
                document.getElementById('approvalDate').hidden = true;
            }
        }

        $(document).ready(function () {
            $(".infoTxt").hide()
            $("#suitabitityHelpText").hide()
            $("#suitabitityHelpTextBtn").click(function () {
                $("#suitabitityHelpText").toggle(500);
            });
        });

        function changeText(element) {
            if (element.innerText == "@DataSet.DisplayInfoRegistration") {
                element.innerHTML = "@Shared.HideText";
            }
            else {
                element.innerHTML = "@DataSet.DisplayInfoRegistration";
            }
        }
    </script>
}

@section breadcrumb {
    <li><a href="@Model.GetObjectUrl()">@Model.NameTranslated()</a></li>
    <li>@Shared.Edit</li>
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                @Shared.Edit status @Model.NameTranslated()
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.HiddenFor(model => model.systemId)
@Html.HiddenFor(model => model.registerId)


@using (Html.BeginForm("Edit", "Datasets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.systemId)
    @Html.HiddenFor(model => model.registerId)
    @Html.HiddenFor(model => model.restricted)
    <ul class="nav nav-tabs" style="clear:both">
        <li class="active"><a href="#general" id="generallink" data-toggle="tab">@DataSet.DOK_GeneralLink</a></li>
        <li><a href="#statusvalues" id="statusvalueslink" data-toggle="tab">@DataSet.DOK_StatusValueHeader</a></li>
        <li><a href="#suitability" id="suitabilitylink" data-toggle="tab">@DataSet.DOK_SuitabilityRating</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="general">
            <div class="form-horizontal">
                <p>@DataSet.GoTo <a href="@(!string.IsNullOrEmpty(Model.Uuid) ? Html.EditorUrl()+"Metadata/Edit?uuid=" + Model.Uuid : Html.EditorUrl()+"Metadata")" target="_blank">@DataSet.MetadataEditor</a> @DataSet.ToEditMetadata.</p>
                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessage("ErrorMessage")
                    </div>
                </div>

                @for (int t = 0; t < Model.Translations.Count; t++)
                {
                    var id = "Translations_" + t + "__Name";
                    @Html.HiddenFor(m => Model.Translations[t].CultureName)
                    <div class="form-group">
                        <label for="@id" class="control-label col-md-3">@Shared.Navn_Engelsk @CultureHelper.GetCultureName(Model.Translations[t].CultureName)</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => Model.Translations[t].Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(m => Model.Translations[t].Name)
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                @for (int t = 0; t < Model.Translations.Count; t++)
                {
                    var id = "Translations_" + t + "__Description";
                    @Html.HiddenFor(m => Model.Translations[t].CultureName)
                    <div class="form-group">
                        <label for="@id" class="control-label col-md-3">@Shared.Beskrivelse_Engelsk @CultureHelper.GetCultureName(Model.Translations[t].CultureName)</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => Model.Translations[t].Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(m => Model.Translations[t].Description)
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.submitterId, Registers.Submitter + ":", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownList("submitterId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.submitterId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Request.IsAuthenticated)
                {
                    if (HtmlHelperExtensions.IsAdmin())
                    {
                        <div class="form-group" id="dokStatus">
                            @Html.LabelFor(model => model.dokStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownList("dokStatusId", null, htmlAttributes: new { @onchange = "dokStatus()", @class = "form-control", @id = "dokStatusId" })
                                @Html.ValidationMessageFor(model => model.dokStatusId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="approvalDate">
                            @Html.LabelFor(model => model.dokStatusDateAccepted, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.dokStatusDateAccepted, new { cssClass = "date" })
                                @Html.ValidationMessageFor(model => model.dokStatusDateAccepted, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Kandidatdato, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Kandidatdato, new { cssClass = "date" })
                        @Html.ValidationMessageFor(model => model.Kandidatdato, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.datasetownerId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Model.datasetowner.NameTranslated()
                        @Html.DropDownList("datasetownerId", null, htmlAttributes: new { @class = "form-control hidden" })
                        @Html.ValidationMessageFor(model => model.datasetownerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.datasetthumbnail, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.datasetthumbnail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @*@Html.ValidationMessageFor(model => model.datasetthumbnail, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ThemeGroupId, new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ThemeGroupId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                @for (int t = 0; t < Model.Translations.Count; t++)
                {
                    @Html.HiddenFor(m => Model.Translations[t].CultureName)
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Translations[t].ThemeGroupId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => Model.Translations[t].ThemeGroupId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(m => Model.Translations[t].ThemeGroupId)
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductSheetUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ProductSheetUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ProductSheetUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PresentationRulesUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PresentationRulesUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.PresentationRulesUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductSpecificationUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ProductSpecificationUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ProductSpecificationUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MetadataUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.MetadataUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.MetadataUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistributionFormat, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DistributionFormat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.DistributionFormat, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistributionUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DistributionUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.DistributionUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistributionArea, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DistributionArea, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.DistributionArea, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UuidService, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.UuidService, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UuidService, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WmsUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.WmsUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WmsUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Uuid, new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Uuid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Uuid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SpecificUsage, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.SpecificUsage, 5, 50, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.SpecificUsage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.Notes, 5, 50, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.Hidden("dontUpdateDescription", false)
            </div>
        </div>
        <div class="tab-pane" id="statusvalues">
            <div class="form-horizontal">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-5 col-md-6">
                            <label>@DataSet.Comment</label>
                        </div>
                        <div class="col-md-1">
                            <label>Auto-<br />@DataSet.Update</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryMetadataStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryMetadataStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryMetadataStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryMetadataStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryMetadataStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryMetadataStatusAutoUpdate", Model.dokDeliveryMetadataStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryProductSheetStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryProductSheetStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryProductSheetStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryProductSheetStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryProductSheetStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryProductSheetStatusAutoUpdate", Model.dokDeliveryProductSheetStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryPresentationRulesStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryPresentationRulesStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryPresentationRulesStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryPresentationRulesStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryPresentationRulesStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryPresentationRulesStatusAutoUpdate", Model.dokDeliveryPresentationRulesStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryProductSpecificationStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryProductSpecificationStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryProductSpecificationStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryProductSpecificationStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryProductSpecificationStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryProductSpecificationStatusAutoUpdate", Model.dokDeliveryProductSpecificationStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryWmsStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryWmsStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryWmsStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryWmsStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryWmsStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryWmsStatusAutoUpdate", Model.dokDeliveryWmsStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryWfsStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryWfsStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryWfsStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryWfsStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryWfsStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryWfsStatusAutoUpdate", Model.dokDeliveryWfsStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliverySosiRequirementsStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliverySosiRequirementsStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliverySosiRequirementsStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliverySosiRequirementsStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliverySosiRequirementsStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliverySosiStatusAutoUpdate", Model.dokDeliverySosiStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryDistributionStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryDistributionStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryDistributionStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryDistributionStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryDistributionStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryDistributionStatusAutoUpdate", Model.dokDeliveryDistributionStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryGmlRequirementsStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryGmlRequirementsStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryGmlRequirementsStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryGmlRequirementsStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryGmlRequirementsStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryGmlRequirementsStatusAutoUpdate", Model.dokDeliveryGmlRequirementsStatusAutoUpdate)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryAtomFeedStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryAtomFeedStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryAtomFeedStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryAtomFeedStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.dokDeliveryAtomFeedStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-1">@Html.CheckBox("dokDeliveryAtomFeedStatusAutoUpdate", Model.dokDeliveryAtomFeedStatusAutoUpdate)</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab-pane" id="suitability">
            <div class="btn-default btn" id="suitabitityHelpTextBtn" onclick="changeText(this)">@DataSet.DisplayInfoRegistration</div>
            <div id="suitabitityHelpText">
                @Html.Raw(DataSet.DOK_SuitabitityHelpText)
                <hr />
            </div>

            <div class="form-horizontal">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-1">
                            <label>@DataSet.Suitability</label>
                        </div>
                        <div class="col-md-8">
                            <label>@DataSet.SuitabilityText</label>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 control-label">
                            <label>@DataSet.SuitabilityRegionsplanleggingText</label>
                        </div>
                        <div class="col-md-1 text-center">
                            @Html.DropDownList("RegionalPlan", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.RegionalPlanNote, new { @style = "min-height:0px" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 control-label">
                            <label>@DataSet.SuitabilitySamfunnText</label>
                        </div>
                        <div class="col-md-1 text-center">
                            @Html.DropDownList("MunicipalSocialPlan", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.MunicipalSocialPlanNote, new { @style = "min-height:0px" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 control-label">
                            <label>@DataSet.SuitabilityArealText</label>
                        </div>
                        <div class="col-md-1 text-center">
                            @Html.DropDownList("MunicipalLandUseElementPlan", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.MunicipalLandUseElementPlanNote, 2, 10, new { @style = "min-height:0px" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 control-label">
                            <label>@DataSet.SuitabilityZoningPlan</label>
                        </div>
                        <div class="col-md-1 text-center">
                            @Html.DropDownList("ZoningPlan", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.ZoningPlanNote, new { @style = "min-height:0px" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 control-label">
                            <label>@DataSet.SuitabilityByggesakText</label>
                        </div>
                        <div class="col-md-1 text-center">
                            @Html.DropDownList("BuildingMatter", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.BuildingMatterNote, new { @style = "min-height:0px" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 control-label">
                            <label>@DataSet.SuitabilityFradelingText</label>
                        </div>
                        <div class="col-md-1 text-center">
                            @Html.DropDownList("PartitionOff", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.PartitionOffNote, 2, 10, new { @style = "min-height:0px" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 control-label">
                            <label>@DataSet.SuitabilityKUText</label>
                        </div>
                        <div class="col-md-1 text-center">
                            @Html.DropDownList("ImpactAssessmentPlanningBuildingAct", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.ImpactAssessmentPlanningBuildingActNote, 2, 10, new { @style = "min-height:0px" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 control-label">
                            <label>@DataSet.SuitabilityROSText</label>
                        </div>
                        <div class="col-md-1 text-center">
                            @Html.DropDownList("RiskVulnerabilityAnalysisPlanningBuildingAct", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.RiskVulnerabilityAnalysisPlanningBuildingActNote, 2, 10, new { @style = "min-height:0px" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <hr />
        <input type="submit" value="@Shared.Save" class="btn btn-default pull-right" />
        <a href="@Model.GetObjectUrl()">@Shared.Back</a>
    </div>

}



