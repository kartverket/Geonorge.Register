@model Kartverket.Register.Models.Document

@{
    ViewBag.Title = Registers.SuggestNewVersionOf + " " + Model.NameTranslated();
}

@section breadcrumb {
    <li><a href="@Model.GetObjectUrl()">@Model.NameTranslated()</a></li>
    <li>@Registers.NewVersion</li>
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                @Registers.SuggestNewVersionOf @Model.NameTranslated()
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

@using (Html.BeginForm("CreateNewVersion", "Documents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="hidden" name="currentVersionId" id="currentVersionId" value="@Model.systemId" />
    <input type="hidden" name="registerId" id="registerId" value="@Model.registerId" />
    <input type="hidden" name="versioningId" id="versioningId" value="@Model.versioningId" />
    <input type="hidden" name="versionNumber" id="versionNumber" value="@Model.versioning.lastVersionNumber" />

    if (Model.register.parentRegisterId != null)
    {
        <input type="hidden" name="parentRegister" id="parentRegister" value="@Model.register.parentRegister.seoname" />
        <input type="hidden" name="parentRegisterOwner" id="parentRegisterOwner" value="@Model.register.parentRegister.owner.seoname" />
    }

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ErrorMessage")
            </div>
        </div>

        @for (int t = 0; t < Model.Translations.Count; t++)
        {
        @Html.HiddenFor(m => Model.Translations[t].CultureName)
        <div class="form-group">
            @Html.LabelFor(m => Model.Translations[t].Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Translations[t].Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => Model.Translations[t].Name)
            </div>
        </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int t = 0; t < Model.Translations.Count; t++)
        {
        @Html.HiddenFor(m => Model.Translations[t].CultureName)
        <div class="form-group">
            @Html.LabelFor(m => Model.Translations[t].Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Translations[t].Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => Model.Translations[t].Description)
            </div>
        </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.versionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.versionName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.versionName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="documentfile">@Documents.DocumentFile:</label>
            <div class="col-md-10">
                <input type="file" name="documentfile" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="thumbnail" />
                @Html.ValidationMessageFor(model => model.thumbnail, "", new { @class = "text-danger" })
                @Documents.ThumbnailInfo
            </div>
        </div>
    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="@Registers.Propose" class="btn btn-default pull-right" />
        <a href="@Model.GetObjectUrl()">@Shared.Back</a>
    </div>
}

