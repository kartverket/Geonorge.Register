@using Kartverket.Register.Models.ViewModels
@using System.Web.Configuration;
@model ShowDatasetCoverageViewModel
@{
    ViewBag.Title = DokCoverage.Title;
}

@section breadcrumb {

    <li>@ViewBag.Title</li>
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1 class="shortcut">
                @DokCoverage.Title
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

<form action="@Request.Url.LocalPath" method="get">
    <div class="row">
        <div class="col-md-3">
            <label for="fylke">@DokCoverage.ZoomLevelSelection:</label>
            <div class="form-group custom-select">
                @Html.DropDownList("fylke", (SelectList)ViewBag.States, DokCoverage.ZoomLevelSelectionEntireCountry, new { @class = "chosen-select form-control", onchange = "form.submit();" })
            </div>
        </div>
        <div class="col-md-5">
            <label for="dataset">@DokCoverage.DokDatasetSelection:</label>
            <div class="form-group custom-select">
                @Html.DropDownList("dataset", (SelectList)ViewBag.Datasets, @DokCoverage.DatasetSelection, new { @class = "chosen-select form-control", onchange = "form.submit();" })
            </div>
        </div>
    </div>
</form>

<p style="color: red;">
    @ViewBag.Warning
</p>

<div class="status-icons norgeskart-legend">
    <div>
        <span class="custom-icon custom-icon-norgeskart-marker"></span> @DokCoverage.Confirmed.
        <div class="custom-checkbox inline-block">
            <input type="checkbox" id="showMarkers" name="showMarkers" onchange="ToggleMarkers();" /><label for="showMarkers" class="checkbox-icon"></label> <label for="showMarkers">@DokCoverage.ShowMarker</label>
        </div>
    </div>
    <div>
        <span class="custom-icon custom-icon-norgeskart-area"></span> @DokCoverage.AreaForDataset
    </div>
</div>

<div id="maplayer">
</div>


<script>
    var win;

    function postMessage(msg) {
        var message = JSON.stringify(msg);
        try{
            win.postMessage(message,'@WebConfigurationManager.AppSettings["MapUrl"]');
        }
        catch(e) {}
    }

    var datasetLayer = "@Model.DatasetWmsLayerName";

    @{
        string zoomLevel = "3";
        if (!string.IsNullOrEmpty(Model.StateName))
        {
            if (Model.StateName == "20" || Model.StateName == "56" || Model.StateName == "30"
                || Model.StateName == "04" || Model.StateName == "18" || Model.StateName == "46" ||
                Model.StateName == "54" || Model.StateName == "34")
            {
                zoomLevel = "5";
            }
            else {
                zoomLevel = "6";
            }
        }
     }

    var zoomLevel = @zoomLevel;

    var BBWest = @Model.StateBoundingBox.West;
    var BBEast = @Model.StateBoundingBox.East;
    var BBSouth = @Model.StateBoundingBox.South;
    var BBNorth = @Model.StateBoundingBox.North;
    xCenter = (BBWest + BBEast) /2;
    yCenter = (BBSouth + BBNorth) / 2;

    $.getJSON('@WebConfigurationManager.AppSettings["GeonorgeWebserviceUrl"]/transformering/v1/transformer?x=' + xCenter + '&y=' + yCenter + '&fra=4326&til=25833', function (result)
    {
            xCenter = Math.floor(result.x);
            yCenter = Math.floor(result.y);

            console.log("xCenter: " + xCenter);
            console.log("yCenter: " + yCenter);

            var iframe = document.createElement('iframe');
            document.getElementById('maplayer').appendChild(iframe);
            iframe.id = "iframe";
            iframe.src= "@WebConfigurationManager.AppSettings["MapUrlDynamic"]/dynamisk-med-navigasjon.html#" + zoomLevel + "/" + xCenter +"/"+ yCenter +"/l/wms/[@WebConfigurationManager.AppSettings["OpenWmsUrl"]/skwms1/wms.gp_dek_oversikt?datasett=@Model.DatasetWmsLayerName]";
            iframe.frameBorder=0;
            iframe.height = "600";
            win = document.getElementById("iframe").contentWindow;

    });


    function AddMarker()
    {
        @foreach (CoverageConfirmedMunicipalityViewModel municipality in Model.DatasetCoverageConfirmedCounties)
            {
                @:postMessage({ "cmd":"addMarker","x":@municipality.CenterCoordinateX,"y":@municipality.CenterCoordinateY,"title":"@Html.Raw(municipality.Name)"} );
                                    }
    }

    var counterInterVal = 0;

    function setMarker() {

        if(counterInterVal <= 4) {
            counterInterVal++;
            AddMarker();
        } else {
            clearInterval(myTimer);
        }
    }

    function clearMarkers()
    {
        postMessage({ "cmd":"clearMarkers"} );
    }

    function ToggleMarkers()
    {
        if(!document.getElementById('showMarkers').checked)
            clearMarkers();
        else
            AddMarker();
    }


</script>