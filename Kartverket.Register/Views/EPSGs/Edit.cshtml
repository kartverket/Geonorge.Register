@using Kartverket.Register.Helpers
@model Kartverket.Register.Models.EPSG
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = Shared.Edit + " " + Model.NameTranslated();
}
@section breadcrumb {
    <li><a href="@Model.GetObjectUrl()">@Model.NameTranslated()</a></li>
    <li>@Shared.Edit</li>
}
<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                @Shared.Edit @Model.NameTranslated()
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.systemId)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ErrorMessage")
            </div>
        </div>

        @for (int t = 0; t < Model.Translations.Count; t++)
        {
            @Html.HiddenFor(m => Model.Translations[t].CultureName)
            <div class="form-group">
                @Html.LabelFor(m => Model.Translations[t].Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.Translations[t].Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => Model.Translations[t].Name)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int t = 0; t < Model.Translations.Count; t++)
        {
            @Html.HiddenFor(m => Model.Translations[t].CultureName)
            <div class="form-group">
                @Html.LabelFor(m => Model.Translations[t].Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.Translations[t].Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => Model.Translations[t].Description)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.submitterId, Registers.Submitter + ":", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("submitterId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.submitterId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Request.IsAuthenticated)
        {
            if (HtmlHelperExtensions.IsAdmin())
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.statusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("statusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.statusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }

        <div class="form-group">
            @Html.LabelFor(model => model.epsgcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.epsgcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.epsgcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sosiReferencesystem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sosiReferencesystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sosiReferencesystem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.verticalReferenceSystem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.verticalReferenceSystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.verticalReferenceSystem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dimensionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("dimensionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.dimensionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.horizontalReferenceSystem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horizontalReferenceSystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.horizontalReferenceSystem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.externalReference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.externalReference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.externalReference, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.inspireRequirementId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("inspireRequirementId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.inspireRequirementId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.inspireRequirementDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.inspireRequirementDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.inspireRequirementDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int t = 0; t < Model.Translations.Count; t++)
        {
            @Html.HiddenFor(m => Model.Translations[t].CultureName)
            <div class="form-group">
                @Html.LabelFor(m => Model.Translations[t].InspireRequirementDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.Translations[t].InspireRequirementDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => Model.Translations[t].InspireRequirementDescription)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.nationalRequirementId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("nationalRequirementId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nationalRequirementId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nationalRequirementDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nationalRequirementDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nationalRequirementDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nationalSeasRequirementId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("nationalSeasRequirementId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nationalSeasRequirementId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nationalSeasRequirementDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nationalSeasRequirementDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nationalSeasRequirementDescription, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="@Shared.Save" class="btn btn-default pull-right" />
        <a href="@Model.GetObjectUrl()">@Shared.Back</a>
    </div>

}



