@model Kartverket.Register.Models.ViewModels.RegisterV2ViewModel
@using Kartverket.Register.Helpers
@using PagedList
@using Kartverket.Register.Models
@using Kartverket.Register.Models.ViewModels
@{
    ViewBag.Title = Model.Name;
    string municipalityCode = ViewBag.selectedMunicipalityCode;
    Organization municipality = ViewBag.organizationMunicipality;
}

@section breadcrumb {
    <li>@Model.Name</li>
}

@{
    var page = ViewBag.page;
    int pageSize = 50;
    int pageNumber = (page ?? 1);
}
@section Scripts {
    <script>
        $(function () {
            var menu_state = localStorage.setItem("navtabselected", "gjeldende");
        }
        );

            //$(function () {

            //    document.querySelectorAll('.tab').forEach(function (tabElement) {
            //        tabElement.className = "tab";
            //    });

            //    var selectedTabParameter = getParameterByName("inspireregisterytype");
            //    var selectedTab = document.getElementById('dataset-Tab');
            //    console.log(selectedTabParameter);
            //    if (selectedTabParameter != "") {
            //        selectedTab = document.getElementById(selectedTabParameter + '-Tab');
            //        if (selectedTab == null) {
            //            console.log(null);
            //            selectedTab = document.getElementById('dataset-Tab');
            //        }
            //    }

            //    selectedTab.className = "active";

            //}
            //);
    </script>
}

@Html.Partial("_SearchBarPartial")

<section>
    <div class="row">
        <div class="col-sm-12">
            <h1 class="small-h1">
                @Model.Name
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
        <div class="col-sm-12 col-md-10">
            <p>
                @Model.Description&nbsp;
                @if (Model.IsDokMunicipal())
                {
                <p>@Html.Raw(HtmlHelperExtensions.GetDOKMunicipalConfirmationText(municipality))</p>
            }
                </p>

                @if (Model.IsAlertRegister())
                {
                    if (!Request.IsAuthenticated)
                    {
                        <span><a href="@Url.Action("SignIn", "Home", new { ReturnUrl = Request.Url })"> Logg inn</a> for å legge til nye varsler.</span><br />
                    }
                    <a href="@RegisterUrls.urlFormat(Request, "atom")" class="">@Alerts.SubscribeServiceAlert</a><br />
                }

            </div>

            <div class="col-sm-12 col-md-2 text-right">
                <span class="small">@Registers.Updated: @Html.DisplayFor(model => model.Modified)</span><br />
            </div>
            @if(Model.Status != null) { 
            <div class="col-sm-12 col-md-2 text-right">
                <span class="small">Status: @Model.Status.DescriptionTranslated()</span><br />
            </div>
            }
            @if (Model.ContainedItemClassIsInspireDataset())
            {
                if (HtmlHelperExtensions.IsAdmin())
                {
                    <div class="clearfix"></div>
                    <div class="col-sm-12 col-md-12">
                        @if (Model.SelectedInspireRegisteryType == "service")
                        {
                            <a class="btn btn-default btn-space pull-right" href="@RegisterUrls.SynchronizeInspireServices()">Synkroniser tjenester</a>
                        }
                        <a class="btn btn-default btn-space pull-right" href="@RegisterUrls.SynchronizeInspireRegistry()">Synkroniser register</a>
                    </div>
                }
                <div class="col-sm-12 col-md-12 ">
                    <navigation-tabs>
                        <navigation-tab-heading slot="tab-heading">
                            @Html.ActionLink("Dataset", "Details", Request.QueryString.ToRouteValueDictionary("InspireRegisteryType", "dataset"))
                        </navigation-tab-heading>
                       
                        <navigation-tab-heading slot="tab-heading">
                            @Html.ActionLink("Tjenester", "Details", Request.QueryString.ToRouteValueDictionary("InspireRegisteryType", "service"))
                        </navigation-tab-heading>  
                         @if (HtmlHelperExtensions.IsAdmin())
                        {
                            <navigation-tab-heading slot="tab-heading">
                                @Html.ActionLink("Rapport", "Details", Request.QueryString.ToRouteValueDictionary("InspireRegisteryType", "report"))
                           </navigation-tab-heading> 
                        }                     
                    </navigation-tabs>
                   

                </div>
            }
            @if (Model.IsDokRegistry())
            {
                if (HtmlHelperExtensions.IsAdmin())
                {
                    <a class="btn btn-default btn-space pull-right" href="@RegisterUrls.DokStatusRegistryReport()">Dok rapport</a>
                }
            }
        </div>
    </section>

    @if (Model.SelectedInspireRegisteryType != "report")
    {
        <div class="row search-result-navigation">
            <div class="col-md-4">
                @if (Model.ContainedItemClassIsRegister())
                {
                    @Html.Partial("_pagedListPagerSubRegisters", Model.Subregisters.ToPagedList(pageNumber, pageSize))
                }
                else if (Model.RegisterItemsV2.Any())
                {
                    @Html.Partial("_pagedListPagerRegisterItemViewModel", Model.RegisterItemsV2.ToPagedList(pageNumber, pageSize))
                }
                else
                {
                    @Html.Partial("_pagedListPager", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
                }
            </div>
            <div class="col-md-4 pull-right">
                @Html.Partial("_otherformats")
            </div>

        </div>


        <div class="clearfix"></div>
        <span class="separator-small margin-bottom-10"></span>
    }
    @if (Model.ContainedItemClassIsOrganization())
    {
        @Html.Partial("_organization", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsCodelistValue())
    {
        @Html.Partial("_codelistValue", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsDocument())
    {
        @Html.Partial("_documents", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsDataset())
    {
        @Html.Partial("_dataset", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsEpsg())
    {
        @Html.Partial("_epsg", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsNameSpace())
    {
        @Html.Partial("_nameSpace", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsAlert())
    {
        @Html.Partial("_alert", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsInspireDataset())
    {

        if (Model.SelectedInspireRegisteryType == "service")
        {
            @Html.Partial("_inspireDataService", Model.RegisterItemsV2.ToPagedList(pageNumber, pageSize))
        }
        else if (Model.SelectedInspireRegisteryTypeIsInspireReport())
        {
            @Html.Partial("_inspireMonitoring", Model.InspireReport)
        }
        else
        {
            @Html.Partial("_inspireDataset", Model.RegisterItemsV2.ToPagedList(pageNumber, pageSize))
        }
    }

    @if (Model.ContainedItemClassIsRegister())
    {
        @Html.Partial("_subregister", Model.Subregisters.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsGeodatalovDataset())
    {
        @Html.Partial("_geodatalovDataset", Model.RegisterItemsV2.ToPagedList(pageNumber, pageSize))
    }
    @if (Model.ContainedItemClassIsMareanoDataset())
    {
        @Html.Partial("_mareanoDataset", Model.RegisterItemsV2.ToPagedList(pageNumber, pageSize))
    }


    @if (Model.SelectedInspireRegisteryType != "report")
    {<div class="clearfix"></div>
        <div class="col-sm-12 row">
            @if (Model.ContainedItemClassIsRegister())
            {
                @Html.Partial("_pagedListPagerSubRegisters", Model.Subregisters.ToPagedList(pageNumber, pageSize))
            }
            else if (Model.RegisterItemsV2.Any())
            {
                @Html.Partial("_pagedListPagerRegisterItemViewModel", Model.RegisterItemsV2.ToPagedList(pageNumber, pageSize))
            }
            else
            {
                @Html.Partial("_pagedListPager", Model.RegisterItems.ToPagedList(pageNumber, pageSize))
            }
        </div>
    }

    <div class="clearfix"></div>
    <div class="hidden-print">
        @if (Request.IsAuthenticated && Model.SelectedInspireRegisteryType != "report")
        {
            if (Model.AccessRegister.EditListOfRegisterItems)
            {
                <a href="@Model.GetEditListUrl()" class="btn btn-default btn-space pull-right">@Registers.EditList</a>
            }
            if (Model.AccessRegister.Add)
            {
                <a class="btn btn-default btn-space pull-right" href="@Model.GetObjectCreateUrl()">@Shared.Add</a>
            }
            if (Model.AccessRegister.Edit)
            {
                <a class="btn btn-default btn-space pull-right" href="@Model.GetEditObjectUrl()">@Shared.Edit</a>
            }
            if (Model.AccessRegister.Delete)
            {
                <a class="btn btn-default btn-space pull-right" href="@Model.GetDeleteObjectUrl()">@Shared.Delete</a>
            }
            if (Model.ContainedItemClass == "CodelistValue" && Model.AccessRegister.Delete)
            {
                <a class="btn btn-default btn-space pull-right" href="@Model.GetDeleteAllObjectUrl()">@Shared.DeleteCodeValues</a>
            }
            if (Model.ContainedItemClass == "CodelistValue" && Model.AccessRegister.Add)
            {
                <a class="btn btn-default btn-space pull-right" href="@Model.GetImportUrl()">@CodelistValues.Import</a>
            }
        }
        <a class="hidden-print show-loading-animation" data-loading-message="@Registers.LoadingMessage" href="@Model.StepBackUrl()">@Shared.Back</a>
    </div>

