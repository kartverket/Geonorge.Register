@model Kartverket.Register.Models.ViewModels.StatusReportViewModel

<script>

    $(document).ready(function () {
        var selectedView = localStorage.getItem("SelectedViewButtons");
        reportView(selectedView, null);
    });

    function reportView(view, event) {
        var buttons = $("#reportViewButtons button");
        $.each(buttons,
            function(index, btn) {
                console.log(btn);
                $(btn).removeClass("button-selected");
            });

        if (event == null) {
            document.getElementById(view + "Button").classList.add("button-selected");
        }
        else {
            event.target.classList.add("button-selected");
        }

        var i;
        var x = document.getElementsByClassName("reportViewContent");
        for (i = 0; i < x.length; i++) {
            x[i].style.display = "none";
        }
        document.getElementById(view).style.display = "block";

        localStorage.setItem("SelectedViewButtons", view);
    }



    @{var javaScriptSerializer = new System.Web.Script.Serialization.JavaScriptSerializer(); }

        var ctx = document.getElementById("myChart").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        fill: false,
        data: {
            labels: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Labels))),
            datasets: [
                {
                    label: "Metadata",
                    borderColor: 'rgb(255, 0, 0)',
                    data:@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Metadata))),
                    backgroundColor: "rgb(255, 0, 0)",
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    fill: false
                },
                {
                    label: "Produktark",
                    fill: false,
                    backgroundColor: 'rgb(240, 179, 35)',
                    borderColor: 'rgb(240, 179, 35)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Productsheet))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "Tegneregler",
                    backgroundColor: "rgb(169, 196, 127)",
                    fill: false,
                    borderColor: 'rgb(169, 196, 127)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PresentationRules))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "Produktspesifikasjoner",
                    backgroundColor: "rgb(93, 71, 119)",
                    fill: false,
                    borderColor: 'rgb(93, 71, 119)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.ProductSpecification))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "WMS",
                    backgroundColor: "rgb(254, 80, 0)",
                    fill: false,
                    borderColor: 'rgb(254, 80, 0)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Wms))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "WFS",
                    backgroundColor: "rgb(125, 161, 196)",
                    fill: false,
                    borderColor: 'rgb(125, 161, 196)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Wfs))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "Sosi-krav",
                    backgroundColor: "rgb(54, 197, 69)",
                    fill: false,
                    borderColor: 'rgb(54, 197, 69)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.SosiRequirements))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "Gml-krav",
                    backgroundColor: "rgb(101, 126, 224)",
                    fill: false,
                    borderColor: 'rgb(101, 126, 224)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.GmlRequirements))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "Atom-feed",
                    backgroundColor: 'rgb(102, 153, 102)',
                    fill: false,
                    borderColor: 'rgb(102, 153, 102)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.AtomFeed))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "Nedlasting",
                    backgroundColor: "rgb(0, 26, 0)",
                    fill: false,
                    borderColor: 'rgb(0, 26, 0)',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Distribution))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                }
            ]
        }
    });


    var ctx = document.getElementById("LineChart").getContext('2d');
    var LineChart = new Chart(ctx, {
        type: 'line',
        fill: false,
        data: {
            labels: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Labels))),
            datasets: [
                {
                    label: "@DataSet.DOK_Delivery_Status_Good",
                    borderColor: '#36c545',
                    data:@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Good))),
                    backgroundColor: "#36c545",
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    fill: false
                },
                {
                    label: "@DataSet.DOK_Delivery_Status_Useable",
                    fill: false,
                    backgroundColor: '#fed633',
                    borderColor: '#fed633',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Useable))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "@DataSet.DOK_Delivery_Status_Deficient",
                    backgroundColor: "#ee432a",
                    fill: false,
                    borderColor: '#ee432a',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Deficient))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                },
                {
                    label: "@DataSet.DOK_Delivery_Status_NotSet",
                    backgroundColor: "#d8d8d8",
                    fill: false,
                    borderColor: '#d8d8d8',
                    data: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.Notset))),
                    pointRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                    pointHoverRadius: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokHistoricalChart.PointSize))),
                }
            ]
        }
    });


    var dataMetadata = {
        labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
        datasets: [
            {
                fill: true,
                backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokMetadataPieChart.Good))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokMetadataPieChart.Useable))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokMetadataPieChart.Deficient))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokMetadataPieChart.NotSet)))],
            }
        ]
    };

    var dataProductsheet = {
            labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
            datasets: [
                {
                    fill: true,
                    backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                    data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokProductSheetPieChart.Good))),
                            @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokProductSheetPieChart.Useable))),
                            @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokProductSheetPieChart.Deficient))),
                            @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokProductSheetPieChart.NotSet)))],
                }
            ]
    };

    var dataPresentationRules = {
            labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
            datasets: [
                {
                    fill: true,
                    backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                    data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokPresentationRulesPieChart.Good))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokPresentationRulesPieChart.Useable))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokPresentationRulesPieChart.Deficient))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokPresentationRulesPieChart.NotSet)))],
                }
            ]
    };

    var dataProductSpecification = {
            labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
            datasets: [
                {
                    fill: true,
                    backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                    data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokProductSpecificationPieChart.Good))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokProductSpecificationPieChart.Useable))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokProductSpecificationPieChart.Deficient))),
                        @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokProductSpecificationPieChart.NotSet)))],
                }
            ]
    };

    var dataWms = {
        labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
        datasets: [
            {
                fill: true,
                backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokWmsPieChart.Good))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokWmsPieChart.Useable))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokWmsPieChart.Deficient))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokWmsPieChart.NotSet)))],
            }
        ]
    };

    var dataWfs = {
        labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
        datasets: [
            {
                fill: true,
                backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokWfsPieChart.Good))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokWfsPieChart.Useable))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokWfsPieChart.Deficient))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokWfsPieChart.NotSet)))],
            }
        ]
    };

    var dataSosiRequirements = {
        labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
        datasets: [
            {
                fill: true,
                backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokSosiRequirementsPieChart.Good))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokSosiRequirementsPieChart.Useable))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokSosiRequirementsPieChart.Deficient))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokSosiRequirementsPieChart.NotSet)))],
            }
        ]
    };

    var dataGmlRequirements = {
        labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
        datasets: [
            {
                fill: true,
                backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokGmlRequirementsPieChart.Good))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokGmlRequirementsPieChart.Useable))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokGmlRequirementsPieChart.Deficient))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokGmlRequirementsPieChart.NotSet)))],
            }
        ]
    };

    var dataAtomFeed = {
        labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
        datasets: [
            {
                fill: true,
                backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokAtomFeedPieChart.Good))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokAtomFeedPieChart.Useable))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokAtomFeedPieChart.Deficient))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokAtomFeedPieChart.NotSet)))],
            }
        ]
    };

    var dataDistribution = {
        labels: ["@DataSet.DOK_Delivery_Status_Good", "@DataSet.DOK_Delivery_Status_Useable", "@DataSet.DOK_Delivery_Status_Deficient", "@DataSet.DOK_Delivery_Status_NotSet"],
        datasets: [
            {
                fill: true,
                backgroundColor: ['#36c545', '#fed633', '#ee432a', '#d8d8d8'],
                data: [@Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokDistributionPieChart.Good))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokDistributionPieChart.Useable))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokDistributionPieChart.Deficient))),
                    @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model.DokDistributionPieChart.NotSet)))],
            }
        ]
    };


    var ctx = document.getElementById("metadataChart").getContext('2d');
    var metadataChart = new Chart(ctx, {
        type: 'pie',
        data: dataMetadata,
        options: {
            responsive: true,
            legend: {
                display: false
            },
            title: {
                display: true,
                text: '@DataSet.DOK_Delivery_Metadata',
                fontSize: 20
            }
        }
    });

    var ctx = document.getElementById("productsheetChart").getContext('2d');
    var productsheetChart = new Chart(ctx, {
        type: 'pie',
        data: dataProductsheet,
        options: {
            responsive: true,
            legend: {
                display: false
            },
            title: {
                display: true,
                text: '@DataSet.DOK_Delivery_ProductSheet',
                fontSize: 20
            },
            pieceLabel: {
                render: 'percentage',
                fontColor: function (data) {
                    var rgb = hexToRgb(data.dataset.backgroundColor[data.index]);
                    var threshold = 140;
                    var luminance = 0.299 * rgb.r + 0.587 * rgb.g + 0.114 * rgb.b;
                    return luminance > threshold ? 'black' : 'white';
                },
                precision: 2
            }
        }
    });

    var ctx = document.getElementById("presentationRulesChart").getContext('2d');
    var presentationRulesChart = new Chart(ctx, {
        type: 'pie',
        data: dataPresentationRules,
        options: {
            responsive: true,
            legend: {
                display: false
            },
            title: {
                display: true,
                text: '@DataSet.DOK_Delivery_PresentationRules',
                fontSize: 20
            }
        }
    });

    var ctx = document.getElementById("productSpecificationChart").getContext('2d');
    var productSpecificationChart = new Chart(ctx, {
        type: 'pie',
        data: dataProductSpecification,
        options: {
            responsive: true,
            legend: {
                display: false
            },
            title: {
                display: true,
                text: '@DataSet.DOK_Delivery_ProductSpesification',
                fontSize: 20
            }
        }
    });

    var ctx = document.getElementById("wmsChart").getContext('2d');
    var wmsChart = new Chart(ctx, {
        type: 'pie',
        data: dataWms,
        options: {
            responsive: true,
            legend: {
                display: false
            },
            title: {
                display: true,
                text: '@DataSet.DOK_Delivery_Wms',
                fontSize: 20
            }
        }
    });

    var ctx = document.getElementById("wfsChart").getContext('2d');
    var wfsChart = new Chart(ctx, {
        type: 'pie',
        data: dataWfs,
        options: {
            responsive: true,
            legend: {
                display: false
            },
            title: {
                display: true,
                text: '@DataSet.DOK_Delivery_Wfs',
                fontSize: 20
            }
        }
    });

    var ctx = document.getElementById("sosiRequirementsChart").getContext('2d');
    var sosiRequirementsChart = new Chart(ctx, {
        type: 'pie',
        data: dataSosiRequirements,
        options: {
            responsive: true,
            legend: {
                display: false
            },
            title: {
                display: true,
                text: '@DataSet.DOK_Delivery_SosiRequirements',
                fontSize: 20
            }
        }
    });

    var ctx = document.getElementById("gmlRequirementsChart").getContext('2d');
    var gmlRequirementsChart = new Chart(ctx, {
        type: 'pie',
        data: dataGmlRequirements,
        options: {
            responsive: true,
            legend: {
                display: false
            },
            title: {
                display: true,
                text: '@DataSet.DOK_Delivery_GmlRequirements',
                fontSize: 20
            }
        }
    });

    var ctx = document.getElementById("atomFeedChart").getContext('2d');
    var atomFeedChart = new Chart(ctx, {
            type: 'pie',
        data: dataAtomFeed,
            options: {
                responsive: true,
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    text: '@DataSet.DOK_Delivery_AtomFeed',
                    fontSize: 20
                }
            }
    });

    var ctx = document.getElementById("distributionChart").getContext('2d');
    var distributionChart = new Chart(ctx, {
            type: 'pie',
        data: dataDistribution,
            options: {
                responsive: true,
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    text: '@DataSet.DOK_Delivery_Distribution',
                    fontSize: 20
                }
            }
    });



</script>
