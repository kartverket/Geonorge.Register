@using Kartverket.Register.Helpers
@model Kartverket.Register.Models.ServiceAlert
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = ServiceAlerts.Title;
}

@section breadcrumb {
    <li>@ServiceAlerts.Title</li>
}
<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                @ServiceAlerts.Title
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

@using (Html.BeginForm("Create", "ServiceAlerts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="form-horizontal">
        @Html.ValidationSummary(false, Shared.ValidationSummary, new { @class = "alert alert-danger" })
        @Html.Hidden("name", "navn")

        <div class="form-group required has-feedback">
            @Html.LabelFor(model => model.ServiceUuid, ServiceAlerts.Service, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                <div class="col-md-6 row">
                    @Html.DropDownList("ServiceUuid", null, ServiceAlerts.SelectService, htmlAttributes: new { @class = "form-control" })
                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                </div>
                <div class="col-md-12 row">
                    <p class="help-text bg-success" id="help-text-serviceuuid" style="display: none">
                        @ServiceAlerts.HelpTextServiceuuid
                    </p>
                </div>
            </div>
            <div class="col-sm-1 pull-right">
                <p class="form-control-static">
                    <a href="#" data-help-text-id="help-text-serviceuuid" class="badge help-text-toggle">?</a>
                </p>
            </div>
        </div>

        @Html.Hidden("ServiceType", Registers.NotSet)

        <div class="form-group required has-feedback">
            @Html.LabelFor(model => model.AlertType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                <div class="col-md-6 row">
                    @Html.DropDownList("AlertType", null, ServiceAlerts.SelectServiceAlert, htmlAttributes: new { @class = "form-control" })
                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                </div>
                <div class="col-md-12 row">
                    <p class="help-text bg-success" id="help-text-alerttype" style="display: none">
                        @Html.Raw(ServiceAlerts.HelpTextAlerttype)
                    </p>
                </div>
            </div>
            <div class="col-sm-1 pull-right">
                <p class="form-control-static">
                    <a href="#" data-help-text-id="help-text-alerttype" class="badge help-text-toggle">?</a>
                </p>
            </div>
        </div>

        @Html.Hidden("Owner", Registers.NotSet)

        <div class="form-group required has-feedback">
            @Html.LabelFor(model => model.AlertDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                <div class="col-md-4 row">
                    @Html.EditorFor(model => model.AlertDate, new { cssClass = "date" })
                    <span class="field-validation-valid" id="AlertDate_validationMessage">@ServiceAlerts.AlertDateValidationMessage</span>
                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                </div>
                <div class="col-md-12 row">
                    <p class="help-text bg-success" id="help-text-alertdate" style="display: none">
                        @ServiceAlerts.HelpTextAlertdate
                    </p>
                </div>
            </div>
            <div class="col-sm-1 pull-right">
                <p class="form-control-static">
                    <a href="#" data-help-text-id="help-text-alertdate" class="badge help-text-toggle">?</a>
                </p>
            </div>
        </div>

        <div class="form-group required has-feedback">
            @Html.LabelFor(model => model.EffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                <div class="col-md-4 row">
                    @Html.EditorFor(model => model.EffectiveDate, new { cssClass = "date" })
                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                </div>
                <div class="col-md-12 row">
                    <p class="help-text bg-success" id="help-text-effectivedate" style="display: none">
                        @ServiceAlerts.HelpTextEffectivedate
                    </p>
                </div>
            </div>
            <div class="col-sm-1 pull-right">
                <p class="form-control-static">
                    <a href="#" data-help-text-id="help-text-effectivedate" class="badge help-text-toggle">?</a>
                </p>
            </div>
        </div>

        <div class="form-group required has-feedback">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                <div class="col-md-12 row">
                    @Html.TextAreaFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                </div>
                <div class="col-md-12 row">
                    <p class="help-text bg-success" id="help-text-note" style="display: none">
                        @ServiceAlerts.HelpTextNote
                    </p>
                </div>
            </div>
            <div class="col-sm-1 pull-right">
                <p class="form-control-static">
                    <a href="#" data-help-text-id="help-text-note" class="badge help-text-toggle">?</a>
                </p>
            </div>
        </div>

        @for (int t = 0; t < Model.Translations.Count; t++)
        {
            @Html.HiddenFor(m => Model.Translations[t].CultureName)
            <div class="form-group">
                @Html.LabelFor(m => Model.Translations[t].Note, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => Model.Translations[t].Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => Model.Translations[t].Note)
                </div>
            </div>
        }

        <div class="form-group">
            <hr />
            <input type="submit" value="@Registers.Publish" class="btn btn-default pull-right" />
            <a href="@Model.register.GetObjectUrl()">@Shared.Back</a>
        </div>
    </div>
}
<script>
    $(function () {

        var today = new Date();
        today.setHours(0, 0, 0, 0);

        $(".date").datepicker("option", "minDate", today);


        $('#AlertDate').change(function () {
            var dateSelected = $('#AlertDate').val();

            var selectedDay = dateSelected.substr(0, 2);
            var selectedMonth = dateSelected.substr(3, 2);
            var selectedYear = dateSelected.substr(6, 4);
            var selectedDate = new Date(selectedYear, selectedMonth - 1, selectedDay);

            if (selectedDate < today) {
                $('#AlertDate_validationMessage').removeClass("field-validation-valid");
                $('#AlertDate_validationMessage').addClass("field-validation-error")
                return false;
            }
            else
                $('#AlertDate_validationMessage').removeClass("field-validation-error");
                $('#AlertDate_validationMessage').addClass("field-validation-valid")
        });

        $('.input-validation-error').each(function () {
            var inputElement = $(this);
            console.log(inputElement);
            inputElement.closest('.form-group').addClass('has-error');
        });

    });



</script>

