@using Kartverket.Register.Helpers
@model Kartverket.Register.Models.ViewModels.DocumentViewModel
﻿@using Kartverket.Register.Helpers

@{
    string thumb = HtmlHelperExtensions.GetThumbnail(Model.Thumbnail, Model.DocumentUrl);
}


<div class="col-sm-12 col-md-2 col">
    @if (Model.DocumentUrl.Contains("ikke angitt") && !string.IsNullOrEmpty(Model.ApplicationSchema))
    {
        <span class="custom-icon custom-icon-l custom-icon-file-xml"></span>
    }
    else if (Model.DocumentUrl.Contains("ikke angitt"))
    {
        <img src="@HtmlHelperExtensions.GetThumbnail(Model.Thumbnail, Model.DocumentUrl)" class="img-thumbnail img-responsive pull-left" alt="forside" />
    }
    else
    {
        if(!string.IsNullOrEmpty(Model.DocumentUrl2))
        {
            <a href="@Html.DisplayFor(model => Model.DocumentUrl2)"><img src="@thumb" class="img-thumbnail img-responsive pull-left" alt="forside" /></a>
        }
        else 
        {
            <a href="@Html.DisplayFor(model => Model.DocumentUrl)"><img src="@thumb" class="img-thumbnail img-responsive pull-left" alt="forside" /></a>
        }
    }
</div>
<div class="col-sm-12 col-md-4 col">
    <p title="@Html.Raw(HtmlHelperExtensions.StatusBeskrivelse(Model.Register))">
        <strong>Status: </strong>@Model.Status.DescriptionTranslated() <i class="statusIcon-@Model.StatusId"></i>
    </p>
    <p><strong>@Html.DisplayNameFor(i => Model.VersionNumber) : </strong>@Model.VersionNumber</p>
    <p><strong>@Registers.VersionName: </strong>@Model.VersionName</p>
</div>
<div class="col-sm-12 col-md-2 col">

    @if (!string.IsNullOrEmpty(Model.DocumentUrl2))
    {
        <a href="@Html.DisplayFor(modelItem => Model.DocumentUrl2)" class="btn btn-block" title="Dokument for @Model.Name">
            <span class="glyphicon glyphicon-link"> </span>@Shared.DisplayDocument
        </a><br />

        if (!Model.DocumentUrl.Contains("ikke angitt"))
        {
            <a href="@Html.DisplayFor(modelItem => Model.DocumentUrl)" class="btn btn-block" title="Last ned dokument for @Model.Name">
                <span class="glyphicon glyphicon-download-alt"> </span>@Shared.Download
            </a><br />
            if (!string.IsNullOrEmpty(Model.DocumentUrlEnglish))
            {
                <a href="@Html.DisplayFor(modelItem => Model.DocumentUrlEnglish)" class="btn btn-block" title="Last ned dokument for @Model.Name">
                    <span class="glyphicon glyphicon-download-alt"> </span>@Shared.DownloadEnglish
                </a><br />
            }
            if (Model.DocumentUrlAttachments != null)
            {
                foreach (var attachment in Model.DocumentUrlAttachments)
                {
                <a href="@Html.DisplayFor(modelItem => attachment.Url)" class="btn btn-block" title="@Html.DisplayFor(modelItem => !string.IsNullOrEmpty(attachment.Text) ? attachment.Text : attachment.Url)">
                    <span class="glyphicon glyphicon-download-alt"> </span>@Shared.Attachment
                </a><br />
                }
            }
        }
    }

    else
    {
        if (Model.DocumentUrl.Contains("ikke angitt"))
        {
            <a href="@Html.DisplayFor(modelItem => Model.DocumentUrl)" class="btn disabled btn-block" title="@Documents.NoDocumentFor @Model.Name">
                <span class="glyphicon glyphicon-download-alt"> </span>@Shared.Download
            </a>
        }
        else
        {
            <a href="@Html.DisplayFor(modelItem => Model.DocumentUrl)" class="btn btn-block" title="Last ned dokument for @Model.Name">
                <span class="glyphicon glyphicon-download-alt"> </span>@Shared.Download
            </a><br />
            if (!string.IsNullOrEmpty(Model.DocumentUrlEnglish))
            {
                <a href="@Html.DisplayFor(modelItem => Model.DocumentUrlEnglish)" class="btn btn-block" title="Last ned dokument for @Model.Name">
                    <span class="glyphicon glyphicon-download-alt"> </span>@Shared.DownloadEnglish
                </a><br />
                }
                if (Model.DocumentUrlAttachments != null)
                {
                    foreach (var attachment in Model.DocumentUrlAttachments)
                    {
                    <a href = "@Html.DisplayFor(modelItem => attachment.Url)" class="btn btn-block" title="@(!string.IsNullOrEmpty(attachment.Text) ? attachment.Text : attachment.Url)">
                        <span class="glyphicon glyphicon-download-alt"> </span>@Shared.Attachment
                    </a><br />
                }
            }
        }
    }

    @if (!string.IsNullOrEmpty(Model.UmlModelTreeStructureLink))
    {
        <a href="@Html.DisplayFor(modelItem => Model.UmlModelTreeStructureLink)" class="btn btn-block" title="Vis UML-modell som HTML" target="_blank">
            <span class="custom-icon custom-icon-eksternlink"> </span> Vis UML-modell
        </a><br />
    }

    @if (!string.IsNullOrEmpty(Model.ApplicationSchema))
    {
        <a href="@Html.DisplayFor(modelItem => Model.ApplicationSchema)" class="btn btn-block" title="Vis datamodell i Geonorge objektkatalog" target="_blank">
            <span class="custom-icon custom-icon-eksternlink"> </span> Vis datamodell
        </a><br />
    }

    @if (!string.IsNullOrEmpty(Model.GmlApplicationSchema))
    {
        <a href="@Html.DisplayFor(modelItem => Model.GmlApplicationSchema)" class="btn btn-block" title="Vis datamodell for @Model.Name" target="_blank">
            <span class="custom-icon custom-icon-eksternlink"> </span> Vis GML-skjema
        </a><br />
    }

    @if (!string.IsNullOrEmpty(Model.CartographyDetailsUrl))
    {
        <a href="@Html.DisplayFor(modelItem => Model.CartographyDetailsUrl)" class="btn btn-block" title="Vis kartografi-fil for @Model.Name" target="_blank">
            <span class="custom-icon custom-icon-eksternlink"> </span> <small>Vis digital kartografi</small>
        </a><br />
    }
</div>
<div class="col-sm-12 col-md-4 col">
    <p><strong>@Registers.Updated: </strong>@Html.DisplayFor(modelItem => Model.Modified)</p>

    @if (Model.DateAccepted != null)
    {
        <p><strong>@Registers.Accepted: </strong>@Html.DisplayFor(modelItem => Model.DateAccepted)</p>
    }
    @if (Model.ApprovalDocument != null)
    {
        <p><strong>@Registers.ApprovalDocument: </strong><br />@Html.DisplayFor(modelItem => Model.ApprovalDocument)</p>
    }
    @if (Model.ApprovalReference != null)
    {
        <p>
            <strong>@Registers.ApprovalReference: </strong><a href="@Html.DisplayFor(modelItem => Model.ApprovalReference)">@Shared.Details <i class="custom-icon-sm custom-icon-eksternlink"></i></a>
        </p>
    }
    @if (Model.DateSuperseded != null)
    {
        <p><strong>@Registers.Superseded: </strong>@Html.DisplayFor(modelItem => Model.DateSuperseded)</p>
    }
    @if (Model.DateRetired != null)
    {
        <p><strong>@Registers.Retired: </strong>@Html.DisplayFor(modelItem => Model.DateRetired)</p>
    }
    @if (Model.DateNotAccepted != null)
    {
        <p><strong>@Registers.Draft </strong>@Html.DisplayFor(modelItem => Model.DateNotAccepted)</p>
    }
</div>
